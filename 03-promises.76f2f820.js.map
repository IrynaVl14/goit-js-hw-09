{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","onFormSubmit","e","preventDefault","formElement","currentTarget","elements","delayEl","valueAsNumber","stepEl","step","amountEl","amount","i","newDelay","then","console","log","catch","addEventListener"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GAEzBC,OADkBC,KAAKC,SAAW,GAE3B,IAAIC,QAAQ,CAACC,EAASC,KACzBC,WAAW,KACXF,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,KACjBA,KAGA,IAAII,QAAQ,CAACC,EAASC,KACzBC,WAAW,KACXD,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,KAChBA,KAKf,MAAMQ,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAaC,GACpBA,EAAEC,iBACIC,MAAAA,EAAcF,EAAEG,cAAcC,SAC9BC,EAAUH,EAAYd,MAAMkB,cAC5BC,EAASL,EAAYM,KAAKF,cAC1BG,EAAWP,EAAYQ,OAAOJ,cAEhCG,GAAAA,EAAW,EACR,IAAA,IAAIE,EAAI,EAAGA,EAAIF,EAAUE,GAAK,EAAG,CAChCC,IAAAA,EAAWP,EAGfnB,EAAcyB,EAAI,EAFlBC,EAAWP,EAAUE,EAASI,GAG3BE,KAAK,EAAG1B,SAAAA,EAAUC,MAAAA,MACjB0B,QAAQC,2BAA2B5B,QAAeC,SAEnD4B,MAAM,EAAG7B,SAAAA,EAAUC,MAAAA,MAClB0B,QAAQC,0BAA0B5B,QAAeC,UAnB3DQ,EAAKqB,iBAAiB,SAAUlB","file":"03-promises.76f2f820.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n            resolve({ position, delay });\n            }, delay);\n        }); \n    } else {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n            reject({ position, delay });\n            }, delay);\n        });\n    }\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const formElement = e.currentTarget.elements;\n  const delayEl = formElement.delay.valueAsNumber;\n  const stepEl = formElement.step.valueAsNumber;\n  const amountEl = formElement.amount.valueAsNumber;\n\n  if (amountEl > 0) {\n    for (let i = 0; i < amountEl; i += 1) {\n      let newDelay = delayEl;\n      newDelay = delayEl + stepEl * i;\n\n      createPromise(i + 1, newDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n}\n"]}